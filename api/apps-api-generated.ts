/* tslint:disable */
/* eslint-disable */
/*
Zapier Embed API

The Zapier Embed API.

The version of the OpenAPI document: 1.0.0
Contact: contact@zapier.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { ActionsListAvailableActionsdefaultResponse } from '../models';
// @ts-ignore
import { AppsListPopular401Response } from '../models';
// @ts-ignore
import { AppsListPopularResponse } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * AppsApi - axios parameter creator
 * @export
 */
export const AppsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * This endpoint returns a list of popular apps.  Keep in mind that Zapier built-in apps will not be returned and the order of the result is by app popularity.  This endpoint requires the `zap` OAuth scope.  This API is rate limited by IP address (60 requests per min), or partner (150 requests per min), whichever occurs first.
         * @summary Get Apps
         * @param {number} [limit] Used for paginating results. Specifies the amount of apps to return.
         * @param {number} [offset] Used for paginating results. Specifies the offset of the apps to return.
         * @param {string} [category] Categories that apps must have in order to be returned in the response. E.g. Accounting (&#x60;accounting&#x60;), AI Tools (&#x60;ai-tools&#x60;), and All (&#x60;all&#x60;). The full list of valid categories can be retrieved using the &#x60;category&#x60; endpoint, detailed [here](https://platform.zapier.com/embed/partner-api#get-v1categories).
         * @param {string} [query] Parameter to limit the results to apps whose titles match the provided query.
         * @param {string} [ids] Parameter to restrict the results to apps whose ID matches those in the provided comma-separated value. Cannot be combined with &#x60;category&#x60;.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listPopular: async (limit?: number, offset?: number, category?: string, query?: string, ids?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/apps`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OAuth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OAuth2", [], configuration)
            // authentication OAuth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OAuth2", [], configuration)
            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (category !== undefined) {
                localVarQueryParameter['category'] = category;
            }

            if (query !== undefined) {
                localVarQueryParameter['query'] = query;
            }

            if (ids !== undefined) {
                localVarQueryParameter['ids'] = ids;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/apps',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AppsApi - functional programming interface
 * @export
 */
export const AppsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AppsApiAxiosParamCreator(configuration)
    return {
        /**
         * This endpoint returns a list of popular apps.  Keep in mind that Zapier built-in apps will not be returned and the order of the result is by app popularity.  This endpoint requires the `zap` OAuth scope.  This API is rate limited by IP address (60 requests per min), or partner (150 requests per min), whichever occurs first.
         * @summary Get Apps
         * @param {AppsApiListPopularRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listPopular(requestParameters: AppsApiListPopularRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AppsListPopularResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listPopular(requestParameters.limit, requestParameters.offset, requestParameters.category, requestParameters.query, requestParameters.ids, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AppsApi - factory interface
 * @export
 */
export const AppsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AppsApiFp(configuration)
    return {
        /**
         * This endpoint returns a list of popular apps.  Keep in mind that Zapier built-in apps will not be returned and the order of the result is by app popularity.  This endpoint requires the `zap` OAuth scope.  This API is rate limited by IP address (60 requests per min), or partner (150 requests per min), whichever occurs first.
         * @summary Get Apps
         * @param {AppsApiListPopularRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listPopular(requestParameters: AppsApiListPopularRequest = {}, options?: AxiosRequestConfig): AxiosPromise<AppsListPopularResponse> {
            return localVarFp.listPopular(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listPopular operation in AppsApi.
 * @export
 * @interface AppsApiListPopularRequest
 */
export type AppsApiListPopularRequest = {
    
    /**
    * Used for paginating results. Specifies the amount of apps to return.
    * @type {number}
    * @memberof AppsApiListPopular
    */
    readonly limit?: number
    
    /**
    * Used for paginating results. Specifies the offset of the apps to return.
    * @type {number}
    * @memberof AppsApiListPopular
    */
    readonly offset?: number
    
    /**
    * Categories that apps must have in order to be returned in the response. E.g. Accounting (`accounting`), AI Tools (`ai-tools`), and All (`all`). The full list of valid categories can be retrieved using the `category` endpoint, detailed [here](https://platform.zapier.com/embed/partner-api#get-v1categories).
    * @type {string}
    * @memberof AppsApiListPopular
    */
    readonly category?: string
    
    /**
    * Parameter to limit the results to apps whose titles match the provided query.
    * @type {string}
    * @memberof AppsApiListPopular
    */
    readonly query?: string
    
    /**
    * Parameter to restrict the results to apps whose ID matches those in the provided comma-separated value. Cannot be combined with `category`.
    * @type {string}
    * @memberof AppsApiListPopular
    */
    readonly ids?: string
    
}

/**
 * AppsApiGenerated - object-oriented interface
 * @export
 * @class AppsApiGenerated
 * @extends {BaseAPI}
 */
export class AppsApiGenerated extends BaseAPI {
    /**
     * This endpoint returns a list of popular apps.  Keep in mind that Zapier built-in apps will not be returned and the order of the result is by app popularity.  This endpoint requires the `zap` OAuth scope.  This API is rate limited by IP address (60 requests per min), or partner (150 requests per min), whichever occurs first.
     * @summary Get Apps
     * @param {AppsApiListPopularRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppsApiGenerated
     */
    public listPopular(requestParameters: AppsApiListPopularRequest = {}, options?: AxiosRequestConfig) {
        return AppsApiFp(this.configuration).listPopular(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
